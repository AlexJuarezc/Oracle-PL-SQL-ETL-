SET SERVEROUTPUT ON;

-- Tabla principal de ventas de items de la tienda:
CREATE TABLE superstore_sales (
    row_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, -- Generación automática de ID
    order_id VARCHAR2(50), -- ID de pedido 
    order_date DATE, -- Fecha del pedido
    ship_date DATE, -- Fecha de envío
    ship_mode VARCHAR2(50), -- Modo de envío
    customer_id VARCHAR2(50), -- ID del cliente
    customer_name VARCHAR2(100), -- Nombre del cliente
    segment VARCHAR2(50), -- Segmento del mercado
    country VARCHAR2(50), -- País
    city VARCHAR2(100), -- Ciudad
    state VARCHAR2(100), -- Estado
    postal_code NUMBER, -- Código postal numérico
    region VARCHAR2(50), -- Región
    product_id VARCHAR2(50), -- ID del producto
    category VARCHAR2(50), -- Categoría del producto
    sub_category VARCHAR2(50), -- Subcategoría del producto
    product_name VARCHAR2(200), -- Nombre del producto
    sales NUMBER, -- Ventas (valor monetario)
    quantity NUMBER, -- Cantidad vendida
    discount NUMBER, -- Descuento aplicado
    profit NUMBER -- Ganancia Total obtenida
);

-- Tabla de ventas de items la tienda temporal poder empezar a limpiar: 
CREATE TABLE superstore_sales_temp (
    row_id NUMBER,
    order_id VARCHAR2(50),
    order_date VARCHAR2(20),
    ship_date VARCHAR2(20), 
    ship_mode VARCHAR2(50),
    customer_id VARCHAR2(50),
    customer_name VARCHAR2(100),
    segment VARCHAR2(50),
    country VARCHAR2(50),
    city VARCHAR2(100),
    state VARCHAR2(100),
    postal_code NUMBER,
    region VARCHAR2(50),
    product_id VARCHAR2(50),
    category VARCHAR2(50),
    sub_category VARCHAR2(50),
    product_name VARCHAR2(200),
    sales NUMBER,
    quantity NUMBER,
    discount NUMBER,
    profit NUMBER
);

-- Tabla de los items de la categoria Furniture (Muebles): 
CREATE TABLE furniture_items (
    product_id VARCHAR2(50),
    category VARCHAR2(50),
    sub_category VARCHAR2(50),
    product_name VARCHAR2(200),
    sales NUMBER,
    quantity NUMBER,
    discount NUMBER,
    profit NUMBER
);

-- Tabla de los items de la categoria Office Supplies Items (Articulos de oficina): 
CREATE TABLE office_supplies_items (
    product_id VARCHAR2(50),
    category VARCHAR2(50),
    sub_category VARCHAR2(50),
    product_name VARCHAR2(200),
    sales NUMBER,
    quantity NUMBER,
    discount NUMBER,
    profit NUMBER
);

-- Tabla de los items de la categoria Office Supplies Items (Articulos de oficina): 
CREATE TABLE technology_items (
    product_id VARCHAR2(50),
    category VARCHAR2(50),
    sub_category VARCHAR2(50),
    product_name VARCHAR2(200),
    sales NUMBER,
    quantity NUMBER,
    discount NUMBER,
    profit NUMBER
);

-- Modificar fecha a un formato valido (MM-DD-YYYY)
UPDATE superstore_sales_temp
SET order_date = TO_DATE(order_date, 'MM-DD-YYYY'), 
      ship_date = TO_DATE(ship_date, 'MM-DD-YYYY');

-- Normalizacion de Texto de los campos country, city, state, region
UPDATE superstore_sales_temp
SET country = UPPER(TRIM(country)),
    city = INITCAP(TRIM(city)),
    state = INITCAP(TRIM(state)),
    region = INITCAP(TRIM(region));

-- Si existen valores nulos en estos campos se reemplazan con el valor cero  
UPDATE superstore_sales_temp
SET sales = NVL(sales, 0),
    profit = NVL(profit, 0),
    discount = NVL(discount, 0),
    quantity = NVL(quantity, 0);

-- Corregir el campo profit (Ganancias) para que el resultado del calculo de las ganancias sea correcto
UPDATE superstore_sales_temp
SET profit = (sales * quantity) * (1 - (discount / 100));



-- insertamos los datos ya limpios y transformados de superstore_sales_temp a superstore_sales: 
INSERT INTO superstore_sales (
    row_id, order_id, order_date, ship_date, ship_mode, customer_id,
    customer_name, segment, country, city, state, postal_code, region,
    product_id, category, sub_category, product_name, sales, quantity,
    discount, profit
)
SELECT 
    row_id, order_id, order_date, ship_date, ship_mode, customer_id,
    customer_name, segment, country, city, state, postal_code, region,
    product_id, category, sub_category, product_name, sales, quantity,
    discount, profit
FROM superstore_sales_temp;

SELECT * FROM superstore_sales;

-- Creamos un cursor para poder extraer los datos de cada categoria de la tabla de ventas de items principal:
DECLARE
    CURSOR sales_cursor IS
        SELECT product_id, category, sub_category, product_name, 
               sales, quantity, discount, profit
        FROM superstore_sales;
BEGIN
    -- Iterar sobre los registros del cursor
    FOR sale_record IN sales_cursor 
     LOOP
        IF sale_record.category = 'Furniture' THEN
            INSERT INTO furniture_items (
                product_id, category, sub_category, product_name, 
                sales, quantity, discount, profit
            ) VALUES (
                sale_record.product_id, sale_record.category, sale_record.sub_category, 
                sale_record.product_name, sale_record.sales, sale_record.quantity, 
                sale_record.discount, sale_record.profit
            );
        
        ELSIF sale_record.category = 'Office Supplies' THEN
            INSERT INTO office_supplies_items (
                product_id, category, sub_category, product_name, 
                sales, quantity, discount, profit
            ) VALUES (
                sale_record.product_id, sale_record.category, sale_record.sub_category, 
                sale_record.product_name, sale_record.sales, sale_record.quantity, 
                sale_record.discount, sale_record.profit
            );
        
        ELSIF sale_record.category = 'Technology' THEN
            INSERT INTO technology_items (
                product_id, category, sub_category, product_name, 
                sales, quantity, discount, profit
            ) VALUES (
                sale_record.product_id, sale_record.category, sale_record.sub_category, 
                sale_record.product_name, sale_record.sales, sale_record.quantity, 
                sale_record.discount, sale_record.profit
            );
        END IF;
     END LOOP;

    DBMS_OUTPUT.PUT_LINE('Datos transferidos a las tablas por categoría.');
END;
/

-- Ordenamos de mayor a menor de entre las ganancias totales de las 3 categorias de items de la tienda:  
SELECT category, total_profit
FROM (
    SELECT 'Furniture' AS category, SUM(profit) AS total_profit
    FROM furniture_items
    UNION ALL
    SELECT 'Office Supplies' AS category, SUM(profit) AS total_profit
    FROM office_supplies_items
    UNION ALL
    SELECT 'Technology' AS category, SUM(profit) AS total_profit
    FROM technology_items
)
ORDER BY total_profit DESC;



